@model EldenRing.Models.ArmorSetModels.ArmorSetEdit

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "ArmorSet", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ArmorSetEdit</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.ArmorSetId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                @Html.EditorFor(model => model.ArmorSetId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ArmorSetId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.TypeOfArmor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                @Html.EnumDropDownListFor(model => model.TypeOfArmor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TypeOfArmor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.Pieces, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                @Html.EditorFor(model => model.Pieces, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Pieces, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.PhysicalProtection, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                @Html.EditorFor(model => model.PhysicalProtection, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhysicalProtection, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.MagicProtection, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                @Html.EditorFor(model => model.MagicProtection, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MagicProtection, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.FireProtection, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                @Html.EditorFor(model => model.FireProtection, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FireProtection, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.LightProtection, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                @Html.EditorFor(model => model.LightProtection, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LightProtection, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.HolyProtection, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                @Html.EditorFor(model => model.HolyProtection, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HolyProtection, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.LocationId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                @Html.EditorFor(model => model.LocationId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                <input type="file" name="ImageData" id="ImageData" onchange="fileCheck(this);" />
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="btn-group" role="group">
            <button type="submit" value="Edit" class="btn btn-default">Edit</button>
            <button class="btn btn-default">@Html.ActionLink("Back to List", "Index")</button>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
