@model EldenRing.Models.WeaponModels.WeaponEdit

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Weapon", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>WeaponEdit</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.WeaponId)

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.TypeOfWeapon, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                @Html.EnumDropDownListFor(model => model.TypeOfWeapon, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TypeOfWeapon, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.StrengthScaling, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                @Html.EditorFor(model => model.StrengthScaling, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StrengthScaling, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.DexterityScaling, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                @Html.EditorFor(model => model.DexterityScaling, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DexterityScaling, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.IntelligenceScaling, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                @Html.EditorFor(model => model.IntelligenceScaling, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IntelligenceScaling, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.FaithScaling, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                @Html.EditorFor(model => model.FaithScaling, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FaithScaling, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.ArcaneScaling, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                @Html.EditorFor(model => model.ArcaneScaling, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ArcaneScaling, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.PhysicalDamage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                @Html.EditorFor(model => model.PhysicalDamage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhysicalDamage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.MagicDamage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                @Html.EditorFor(model => model.MagicDamage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MagicDamage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.FireDamage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                @Html.EditorFor(model => model.FireDamage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FireDamage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.LightDamage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                @Html.EditorFor(model => model.LightDamage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LightDamage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.HolyDamage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                @Html.EditorFor(model => model.HolyDamage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HolyDamage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.Bleed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Bleed)
                    @Html.ValidationMessageFor(model => model.Bleed, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.Poison, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Poison)
                    @Html.ValidationMessageFor(model => model.Poison, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.FrostBite, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                <div class="checkbox">
                    @Html.EditorFor(model => model.FrostBite)
                    @Html.ValidationMessageFor(model => model.FrostBite, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.ScarletRot, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                <div class="checkbox">
                    @Html.EditorFor(model => model.ScarletRot)
                    @Html.ValidationMessageFor(model => model.ScarletRot, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.Sleep, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Sleep)
                    @Html.ValidationMessageFor(model => model.Sleep, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.Madness, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Madness)
                    @Html.ValidationMessageFor(model => model.Madness, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.LocationId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                @Html.EditorFor(model => model.LocationId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
            </div>
        </div>

        <p>Input location Id 185 if no location is needed</p>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.SpellId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                @Html.EditorFor(model => model.SpellId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SpellId, "", new { @class = "text-danger" })
            </div>
        </div>

        <p>Input Spell Id 54 if no spell is needed</p>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                <input type="file" name="ImageData" id="ImageData" onchange="fileCheck(this);" />
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="btn-group" role="group">
            <button type="submit" value="Edit" class="btn btn-default">Edit</button>
            <button class="btn btn-default">@Html.ActionLink("Back to List", "Index")</button>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
