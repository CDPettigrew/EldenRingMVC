@model EldenRing.Models.SpellModels.SpellCreate

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm("Create", "Spell", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>SpellCreate</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-2">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.Incantation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Incantation)
                    @Html.ValidationMessageFor(model => model.Incantation, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.Scorcery, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Scorcery)
                    @Html.ValidationMessageFor(model => model.Scorcery, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.FocusPoints, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-2">
                @Html.EditorFor(model => model.FocusPoints, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FocusPoints, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.SlotUsage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-2">
                @Html.EditorFor(model => model.SlotUsage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SlotUsage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.IntelligenceScaling, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-2">
                @Html.EditorFor(model => model.IntelligenceScaling, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IntelligenceScaling, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.FaithScaling, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-2">
                @Html.EditorFor(model => model.FaithScaling, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FaithScaling, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.ArcaneScaling, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-2">
                @Html.EditorFor(model => model.ArcaneScaling, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ArcaneScaling, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.LocationId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-2">
                @Html.EditorFor(model => model.LocationId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3" style="margin: 1rem 0rem 1rem 0rem">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-offset-1">
                <input type="file" name="ImageData" id="ImageData" onchange="fileCheck(this);" />
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
        </div>

        <div>
            <div class="btn-group" role="group">
                <button type="submit" value="Create" class="btn btn-default">Create</button>
                <button class="btn btn-default">@Html.ActionLink("Back to List", "Index")</button>
            </div>
        </div>
    </div>
}
